version: '3.8'

services:
  # Main BlueFX Next.js App
  bluefx-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_SUPABASE_URL: ${APP_NEXT_PUBLIC_SUPABASE_URL}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${APP_NEXT_PUBLIC_SUPABASE_ANON_KEY}
        NEXT_PUBLIC_SITE_URL: ${APP_NEXT_PUBLIC_SITE_URL}
        SUPABASE_SERVICE_ROLE_KEY: ${APP_SUPABASE_SERVICE_ROLE_KEY}
        PERPLEXITY_API_KEY: ${APP_PERPLEXITY_API_KEY}
        OPENAI_API_KEY: ${APP_OPENAI_API_KEY}
        REPLICATE_API_TOKEN: ${APP_REPLICATE_API_TOKEN}
        HEDRA_API_KEY: ${APP_HEDRA_API_KEY}
        YOUTUBE_API_KEY: ${APP_YOUTUBE_API_KEY}
        SIEVE_API_KEY: ${APP_SIEVE_API_KEY}
        SHOTSTACK_API_KEY: ${APP_SHOTSTACK_API_KEY}
        RAPIDAPI_KEY: ${APP_RAPIDAPI_KEY}
        ENABLE_AI_FEATURES: ${APP_ENABLE_AI_FEATURES}
        ZAPIER_WEBHOOK_SECRET: ${APP_ZAPIER_WEBHOOK_SECRET}
        CLICKBANK_PRODUCT_ID: ${APP_CLICKBANK_PRODUCT_ID}
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${APP_NODE_ENV:-production}
      - PORT=3000
      - REMOTION_SERVICE_URL=http://remotion:3001
      - REACT_VIDEO_EDITOR_URL=http://react-video-editor:3002
      - NEXT_PUBLIC_REACT_VIDEO_EDITOR_URL=http://react-video-editor:3002
      
      # Supabase Configuration
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${APP_NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - NEXT_PUBLIC_SUPABASE_URL=${APP_NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SITE_URL=${APP_NEXT_PUBLIC_SITE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${APP_SUPABASE_SERVICE_ROLE_KEY}
      
      # AI APIs
      - PERPLEXITY_API_KEY=${APP_PERPLEXITY_API_KEY}
      - OPENAI_API_KEY=${APP_OPENAI_API_KEY}
      - REPLICATE_API_TOKEN=${APP_REPLICATE_API_TOKEN}
      - HEDRA_API_KEY=${APP_HEDRA_API_KEY}
      
      # External APIs
      - YOUTUBE_API_KEY=${APP_YOUTUBE_API_KEY}
      - SIEVE_API_KEY=${APP_SIEVE_API_KEY}
      - SHOTSTACK_API_KEY=${APP_SHOTSTACK_API_KEY}
      - RAPIDAPI_KEY=${APP_RAPIDAPI_KEY}
      
      # Feature Flags
      - ENABLE_AI_FEATURES=${APP_ENABLE_AI_FEATURES}
      
      # Webhooks & Integrations
      - ZAPIER_WEBHOOK_SECRET=${APP_ZAPIER_WEBHOOK_SECRET}
      - CLICKBANK_PRODUCT_ID=${APP_CLICKBANK_PRODUCT_ID}
    depends_on:
      - remotion
      - react-video-editor
    restart: unless-stopped
    mem_limit: 1g
    cpus: '0.5'
    # healthcheck:
    #   test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 60s

  # React Video Editor Next.js App
  react-video-editor:
    build:
      context: ./react-video-editor
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=${EDITOR_NODE_ENV:-production}
      - PORT=3002
      - REMOTION_SERVER_URL=http://remotion:3001
      - NEXT_PUBLIC_REMOTION_SERVER_URL=${EDITOR_NEXT_PUBLIC_REMOTION_SERVER_URL:-http://localhost:3001}
      - REMOTION_API_KEY=${EDITOR_REMOTION_API_KEY}
      - CORS_ORIGIN=${EDITOR_CORS_ORIGIN}
      - PEXELS_API_KEY=${EDITOR_PEXELS_API_KEY}
      - UPLOAD_SERVICE_URL=${EDITOR_UPLOAD_SERVICE_URL}
    depends_on:
      - remotion
    restart: unless-stopped
    mem_limit: 1g
    cpus: '0.5'
    # healthcheck:
    #   test: ["CMD", "node", "-e", "require('http').get('http://localhost:3002/', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 60s

  # Remotion Server
  remotion:
    build:
      context: ./remotion
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=${REMOTION_NODE_ENV:-production}
      - PORT=3001
      - REMOTION_CONCURRENCY=${REMOTION_CONCURRENCY:-2}
      - REMOTION_API_KEY=${REMOTION_API_KEY}
      - CORS_ORIGIN=${REMOTION_CORS_ORIGIN:-*}
    volumes:
      - remotion_output:/app/output
      - remotion_output_local:/app/output_local
    restart: unless-stopped
    mem_limit: 2g
    cpus: '1.0'
    # healthcheck:
    #   test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

volumes:
  remotion_output:
    driver: local
  remotion_output_local:
    driver: local